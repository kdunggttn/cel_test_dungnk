generator client {
    provider                    = "prisma-client-py"
    previewFeatures             = ["multiSchema"]
    enable_experimental_decimal = true
    recursive_type_depth        = -1
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    schemas  = ["items", "outlets", "sales"]
}

// Items
model items {
    id                String            @id
    created_at        DateTime          @default(now()) @db.Timestamptz(6)
    updated_at        DateTime?         @db.Timestamptz(6)
    fat_content_type  String            @db.Uuid
    item_type         String            @db.Uuid
    outlet_id         String
    outlet            outlets           @relation(fields: [outlet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
    fat_content_types fat_content_types @relation(fields: [fat_content_type], references: [id], onDelete: Cascade, onUpdate: NoAction)
    item_types        item_types        @relation(fields: [item_type], references: [id], onDelete: Cascade, onUpdate: NoAction)
    sales             sales[]

    @@schema("items")
}

model fat_content_types {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    created_at DateTime  @default(now()) @db.Timestamptz(6)
    updated_at DateTime? @db.Timestamptz(6)
    name       String    @unique
    items      items[]

    @@schema("items")
}

model item_types {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    created_at DateTime  @default(now()) @db.Timestamptz(6)
    updated_at DateTime? @db.Timestamptz(6)
    name       String    @unique
    items      items[]

    @@schema("items")
}

// Outlets
model outlets {
    id                    String                @id
    created_at            DateTime              @default(now()) @db.Timestamptz(6)
    updated_at            DateTime?             @db.Timestamptz(6)
    establishment_year    Int
    outlet_size_type      String                @db.Uuid
    outlet_type           String                @db.Uuid
    outlet_location_type  String                @db.Uuid
    outlet_size_types     outlet_size_types     @relation(fields: [outlet_size_type], references: [id], onDelete: Cascade, onUpdate: NoAction)
    outlet_types          outlet_types          @relation(fields: [outlet_type], references: [id], onDelete: Cascade, onUpdate: NoAction)
    outlet_location_types outlet_location_types @relation(fields: [outlet_location_type], references: [id], onDelete: Cascade, onUpdate: NoAction)
    items                 items[]
    sales                 sales[]

    @@schema("outlets")
}

model outlet_size_types {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    created_at DateTime  @default(now()) @db.Timestamptz(6)
    updated_at DateTime? @db.Timestamptz(6)
    name       String    @unique
    outlets    outlets[]

    @@schema("outlets")
}

model outlet_location_types {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    created_at DateTime  @default(now()) @db.Timestamptz(6)
    updated_at DateTime? @db.Timestamptz(6)
    name       String    @unique
    outlets    outlets[]

    @@schema("outlets")
}

model outlet_types {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    created_at DateTime  @default(now()) @db.Timestamptz(6)
    updated_at DateTime? @db.Timestamptz(6)
    name       String    @unique
    outlets    outlets[]

    @@schema("outlets")
}

// Sales
model sales {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    created_at DateTime  @default(now()) @db.Timestamptz(6)
    updated_at DateTime? @db.Timestamptz(6)
    item_id    String
    weight     Decimal   @db.Decimal(10, 3) // Total number of digits, number of digits after the decimal point
    visibility Decimal   @db.Decimal(10, 9) // 0 < visibility < 1
    mrp        Decimal   @db.Decimal(10, 4)
    outlet_id  String
    sales      Decimal   @db.Decimal(12, 4)
    item       items     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
    outlet     outlets   @relation(fields: [outlet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@schema("sales")
}
